package com.internousdev.MyPage.action;

import java.util.Map;

import org.apache.struts2.interceptor.SessionAware;

//import com.internousdev.MyPage.dao.BuyItemDAO;
import com.internousdev.MyPage.dao.LoginDAO;
//import com.internousdev.MyPage.dto.BuyItemDTO;
import com.internousdev.MyPage.dto.LoginDTO;
import com.opensymphony.xwork2.ActionSupport;

public class LoginAction extends ActionSupport implements SessionAware{

	/*
	 * ログイン認証処理
	 * login.jspの画面上に入力されたloginUserIdとloginPasswordをDAOに渡す
	 * DAOが受け取ったデータをDBに問い合わせし、DTO型にデータを格納し他ものを
	 * Actionが受け取り、認証されれば購入に進む。エラーならloginに戻る
	 */
	private String loginUserId;
	private String loginPassword;
	public Map<String,Object>session;
	private LoginDAO loginDAO=new LoginDAO();
	private LoginDTO loginDTO=new LoginDTO();


	public String execute(){
		String result=ERROR;

//

		//ログイン実行 データを渡す
		loginDTO=loginDAO.getLoginUserInfo(loginUserId, loginPassword);
		//キーワードloginUserでloginDTO（UserIdとPasswordを格納したもの）
		//をsessionに入れる
		session.put("loginUser",loginDTO);

//DTOを通じてデータがActionに返されてからの処理

		//ログイン情報を比較 LoginDTO型でせsessionから前述の情報を取り出し、
		if(((LoginDTO)session.get("loginUser")).getLoginFlg()){
			result=SUCCESS;

			BuyItemDTO buyItemDTO = buyItemDAO.getBuyItemInfo();
			session.put("login_user_id",	loginDTO.getLoginId());
			session.put("id", buyItemDTO.getId());
			session.put("buyItem_name", buyItemDTO.getItemName());
			session.put("buyItem_price", buyItemDTO.getItemPrice());

			return result;
		}

		return result;
	}

	public String getLoginUserId() {
		return loginUserId;
	}

	public void setLoginUserId(String loginUserId) {
		this.loginUserId = loginUserId;
	}

	public String getLoginPassword() {
		return loginPassword;
	}

	public void setLoginPassword(String loginPassword) {
		this.loginPassword = loginPassword;
	}

	@Override
	public void setSession(Map<String, Object> session) {
		this.session = session;
	}






	}


